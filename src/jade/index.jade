doctype html
html
  head
    meta(charset='UTF-8')
    title Swift Seminar 2017
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='css/highlight.pack.css')
    link(rel="stylesheet", href='https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css')
    link(rel='stylesheet', href='css/app.css')

  body

    .container
        section
            .playground-header
                h2.main-title Swift Seminar 2017

        section.env.mb20
            h2.env-title 実行環境
            | macOS Sierra 10.12.3 <br> Xcode 8.3 beta 3(8W132p)

        h3.play-title Bluetooth Low Energy

        p.mb10 ※使用するプログラムは
            a(href="https://github.com/code0-sh/iOS-BLE", target="blank") こちら
            | にあります。

        section.playground
            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step1: Bluetooth Low Energyとは
                    .play-code
                        .guidance
                            p.mb10 Bluetooth Low Energy(BLE, Bluetooth4.0)とは2.4GHzの省電力無線通信プロトコルです。<br>※ プロトコルとは通信での送受信の手順を定めた規格のこと。<br>※ クラシックBluetoothとは互換性がない。
                            dl.subject.mb20
                                dt.subject-title 特徴
                                dd.subject-contents
                                    ul
                                        li 低消費電力: コイン型リチウムイオン電池1個で、通信モジュールを1～2年間動作させることが可能
                                        li 通信速度: 10～50kbps
                                        li 通信距離: 2.5〜50m (※ 障害物によって影響を受ける。)
                            dl.subject.mb20
                                dt.subject-title 利用例
                                dd.subject-contents IoT機器、ウェラブル機器など
                            dl.subject.mb20
                                dt.subject-title BLEの登場人物
                                dd.subject-contents
                                    ul
                                        li ペリフェラル(周辺装置、Peripherals) ex. 温度センサー、加速度センサー
                                        li セントラル(中央装置、Centrals) ex. PC、スマートフォン(※ ペリフェラルにもなり得る。)
                            dl.mb20
                                dt
                                    span.highlight.marker ペリフェラル
                                dd 他のデバイスが必要とするデータがあって、それを提供する。
                                dd
                                    canvas#canvas-peripherals
                                dd ペリフェラルは自身の存在を知らしめるため、電波を使って周囲に
                                    span.highlight.marker アドバタイズ
                                    |する。
                            dl
                                dt
                                    span.highlight.marker セントラル
                                dd 必要なデータを提供してくれるペリフェラルがないか走査し、該当するペリフェラルを検出すると、接続を要求し、データのやり取りを始める。
            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step2: ペリフェラル
                    .play-code
                        .guidance
                            dl.subject.mb20
                                dt.subject-title データ構造
                                dd.subject-contents
                                    ul
                                        li 1つ以上の
                                            span.highlight.marker サービス（service）
                                            |を提供する。
                                        li サービスは
                                            span.highlight.marker 特性（characteristic）
                                            |またはサービスから成る。
                            .mb20
                                img(src="images/service.png")
                            dl.subject.mb20
                                dt.subject-title アドバタイズ
                                dd.subject-contents ペリフェラルが自身の存在を知らせるために出す「広告」のこと。<br>
                                    |アドバタイズパケットの形式で、所定のデータを同報送信（broadcast）する。<br>
                                    |※ アドバタイズパケット（advertising packet）は比較的小さなデータバンドルで、ペリフェラルの名前や主な機能など、提供可能なデータを表す情報が入っている。
                            div.css-advertising.mb20
                                div.css-advertising-central Central
                                div.css-advertising-Ad.left Ad
                                div.css-advertising-Ad Ad
                                div.css-advertising-Ad Ad
                                div.css-advertising-Ad Ad
                                div.css-advertising-peripheral Peripheral
                            dl.subject
                                dt.subject-title Flow
                                dd.subject-contents
                                    ol
                                        li サービスを作成する。
                                        li アドバタイズを開始する。
                                        li セントラルからの読み込み/書き込み/通知要求に応答する。

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step3: セントラル
                    .play-code
                        .guidance.mb10
                            dl.subject.mb20
                                dt.subject-title Flow
                                dd.subject-contents
                                    ol
                                        li 該当のサービスを提供しているペリフェラルを検索する。
                                        li ペリフェラルに接続する。
                                        li サービスを検索する。
                                        li サービスの特性を検索する。
                                        li 特性値の読み込み/書き込み/通知要求を行う。
            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step4: Core Bluetoothフレームワーク
                    .play-code
                        div.guidance.mb10
                            div.mb20 iOS/Macアプリケーションで、BLEを実装したデバイスと通信するために使用するフレームワーク<br>Appleの
                                 a(href="https://developer.apple.com/jp/documentation/CoreBluetoothPG.pdf", target="blank") ドキュメント
            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step5: ペリフェラルの実装
                    .play-code
                        div.guidance.mb10
                            dl
                                ol
                                    li ペリフェラルマネージャを生成する。
                                        .mb10
                                            include:markdown ../md/Step5/1.md
                                    li ペリフェラルマネージャにペリフェラルが提供するサービスや特性を設定する。
                                        .mb10
                                            include:markdown ../md/Step5/2.md
                                    li サービスをアドバタイズする。
                                        .mb10
                                            include:markdown ../md/Step5/3.md
                                    li
                                        div セントラルからの読み込み要求に応答する。
                                            .mb10
                                                include:markdown ../md/Step5/4.md
                                        div セントラルからの書き込み要求に応答する。
                                            .mb10
                                                include:markdown ../md/Step5/5.md
                                        div セントラルからの通知要求に応答する。
                                            .mb10
                                                include:markdown ../md/Step5/6.md
            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step6: セントラルの実装
                    .play-code
                        div.guidance.mb10
                            dl
                                ol
                                    li セントラルマネージャを生成する。
                                        .mb10
                                            include:markdown ../md/Step6/1.md
                                    li サービスを提供しているペリフェラルを検索する。
                                        .mb10
                                            include:markdown ../md/Step6/2.md
                                    li ペリフェラルに接続する。
                                        .mb10
                                            include:markdown ../md/Step6/3.md
                                    li サービスを検索する。
                                        .mb10
                                            include:markdown ../md/Step6/4.md
                                    li サービスの特性を検索する。
                                        .mb10
                                            include:markdown ../md/Step6/5.md
                                    li
                                        div 特性値の読み込みを行う。
                                            .mb10
                                                include:markdown ../md/Step6/6.md
                                        div 特性値の書き込みを行う。
                                            .mb10
                                                include:markdown ../md/Step6/7.md
                                        div 特性値の通知要求を行う。
                                            .mb10
                                                include:markdown ../md/Step6/8.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step4: 画像を表示する
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents SKSpriteNode、SKTextureを使って画像を表示できる。

                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span 画像を表示変更する。
                                ol.ml20.mb10
                                    li SKSpriteNodeを使って画像を表示する。
                                    li SKTextureを使って画像を変更する。

                                ul.displayTable
                                  li.tableCell.pr10
                                    img(src="images/step4_xcode_03.png", class="capture mr10")
                                  li.tableCell
                                     img(src="images/step4_xcode_04.png", class="capture")

                        button.answerBtn.mb10 解答例

                        .answer.hidden
                            ul.guidance
                                li Assets.xcassetsに画像ファイル(person.png)をドラッグアンドドロップする。
                                img(src="images/step4_xcode_01.png", class="capture")

                                include:markdown ../md/Step4/1.md

                                li Assets.xcassetsに画像ファイル(airplane.png)をドラッグアンドドロップする。
                                  div
                                    img(src="images/step4_xcode_02.png", class="capture")

                                include:markdown ../md/Step4/2.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step5: アニメーション
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents SKActionを使ったアニメーションができる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents.mb10
                                .mb10
                                    span SKActionを使って対象物にアニメーションを付ける。
                                ol.ml20.mb10
                                    li SKSpriteNodeを使用しアニメーションの対象物を生成する。
                                    li 対象物を配置する。
                                    li SKActionを使用しアニメーションを作成する。
                                    li 作成したアニメーションを対象物に設定する。

                                img(src="images/step5_xcode_02.png", class="capture")

                            dt.subject-title 補足事項
                            dd.subject-contents 対象物はbackground.pngを使用するためAssets.xcassetsに画像ファイル(background.png)をドラッグアンドドロップする。
                              div
                                img(src="images/step5_xcode_01.png", class="capture")

                        button.answerBtn.mb10 解答例

                        .answer.hidden

                            ul.guidance
                                li
                                    include:markdown ../md/Step5/1.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step6: 物理空間の生成と衝突
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents physicsWorld、physicsBody、SKPhysicsBodyを使って物理空間を生成し、衝突イベントを設定できる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents.mb10
                                .mb10
                                    span physicsWorld、physicsBody、SKPhysicsBodyを使って物理空間を生成し、他物体との衝突イベントを生じさせる。衝突時に一方を消す。
                                ol.ml20.mb10
                                    li SKSpriteNodeを使用し対象物を生成する。
                                    li 対象物をランダムに配置する。
                                    li physicsWorld、physicsBody、SKPhysicsBodyを使って物理空間を生成する。
                                    li 衝突イベントを設定する。

                                img(src="images/step6_xcode_02.png", class="capture")

                            dt.subject-title 補足事項
                            dd.subject-contents 対象物はenemy.pngを使用するためAssets.xcassetsに画像ファイル(enemy.png)をドラッグアンドドロップする。
                              div
                                img(src="images/step6_xcode_01.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li 衝突判定用のビット値の定義
                                    include:markdown ../md/Step6/1.md
                                li 対象物の生成と配置
                                    include:markdown ../md/Step6/2.md
                                li Sceneの物理設定
                                    include:markdown ../md/Step6/3.md
                                li 対象物の物理設定
                                    include:markdown ../md/Step6/4.md
                                li 衝突時のイベント
                                    include:markdown ../md/Step6/5.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step7: タップ
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents タップイベントを設定できる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span タップすると飛行機がタップ位置に移動する。ダブルタップの場合移動後に弾丸を発射する。
                                ol.ml20.mb10
                                    li SKSpriteNodeを使用し飛行機を生成し配置する。
                                    li タップ開始イベントを設定する。
                                    li タップ終了イベントを設定する。
                                    li SKShapeNodeを使用し弾丸をタップ位置に生成し、アニメーションを設定する。

                                img(src="images/step7_xcode_01.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li タップ開始イベント
                                    include:markdown ../md/Step7/1.md
                                li タップイベント
                                    include:markdown ../md/Step7/2.md
                                li SKShapeNodeを使用した弾丸の生成
                                    include:markdown ../md/Step7/3.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step8: パーティクルと効果音
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents パーティクルと効果音を設定できる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents.mb10
                                .mb10
                                    span タップすると星のパーティクルが発生し、効果音が鳴る。パーティクルは一定時間経つと消える。
                                ol.ml20.mb10
                                    li SKEmitterNodeを使用し星のパーティクルを生成する。
                                    li SKActionを設定し効果音をつける。
                                    li タップ開始イベントで1,2を実行する。

                                img(src="images/step8_xcode_02.png", class="capture")

                            dt.subject-title 補足事項
                            dd.subject-contents 星(star.png)と効果音(sound_explosion.mp3)を使用するためAssets.xcassetsに対象ファイルをドラッグアンドドロップする。
                              div
                                img(src="images/step8_xcode_01.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li パーティクル生成
                                    include:markdown ../md/Step8/1.md
                                li 効果音再生
                                    include:markdown ../md/Step8/2.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step9: 加速度センサー
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents 加速度センサーを使用できる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span 端末を傾けると飛行機が横(X軸方向)に移動する。
                                ol.ml20.mb10
                                    li SKSpriteNodeを使用して飛行機を生成する。
                                    li Sceneと飛行機に物理空間を設定する。
                                    li 加速度データを使用して飛行機のx方向の移動距離を算出する。
                                    li 1フレームごとに3から飛行機の位置を更新する。

                                img(src="images/step9_xcode_01.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li 衝突判定用のビット値の定義
                                    include:markdown ../md/Step9/1.md
                                li 飛行機の物理空間の設定
                                    include:markdown ../md/Step9/2.md
                                li Sceneの物理空間の設定
                                    include:markdown ../md/Step9/3.md
                                li 1フレーム毎に呼ばれるメソッド
                                    include:markdown ../md/Step9/4.md
                                li 加速度データの使用
                                    include:markdown ../md/Step9/5.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step10: シーン間の遷移
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents シーン間の遷移ができるようになる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span 3つのシーン(HomeScene、GameScene、ResultScene)を生成して遷移させる。
                                ol.ml20.mb10
                                    li 3つのシーンを生成する。
                                    li 遷移イベントのトリガー(タッチ開始イベント)を生成する。
                                    li 遷移元から遷移先にuserDataを使用しデータを渡す。

                                ul.displayTable
                                  li.tableCell.pr10
                                    img(src="images/step10_xcode_01.png", class="capture")
                                  li.tableCell.pr10
                                    img(src="images/step10_xcode_02.png", class="capture")
                                  li.tableCell
                                    img(src="images/step10_xcode_03.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li シーンへの遷移とアニメーション設定
                                    include:markdown ../md/Step10/1.md
                                li userDataの使い方
                                    include:markdown ../md/Step10/2.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step11: シューティングゲーム
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents Step1〜10までの機能を組み合わせたプログラム作成ができる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span シューティングゲームを作成する。
                                ol.ml20.mb10
                                    li 3つのシーン(HomeScene,GameScene,ResultScene)を生成する。
                                    li HomeScene
                                        ul
                                            li Startラベルを配置する。
                                            li StartラベルをタップするとGameSceneに遷移する。
                                    li GameScene
                                        ul
                                            li 背景画像を設定する。
                                            li 飛行機を設定する。
                                            li エネミーを設定する。
                                            li 弾丸を設定する。
                                            li パーティクルを設定する。
                                            li 飛行機のステータスを設定する。
                                            li 弾丸のステータスを設定する。
                                            li スコアを設定する。
                                            li 接触時のイベントを設定する。
                                            li タップ開始イベントを設定する。
                                            li ResultSceneのuserDataにスコアを保存する。

                                    li ResultScene
                                        ul
                                            li ゲームオーバー、スコア、再スタートラベルを配置する。
                                            li 再スタートラベルタッチするとGameSceneに遷移する。

                                ul.displayTable
                                  li.tableCell.pr10
                                    img(src="images/step11_xcode_01.png", class="capture")
                                  li.tableCell.pr10
                                    img(src="images/step11_xcode_02.png", class="capture")
                                  li.tableCell
                                    img(src="images/step11_xcode_03.png", class="capture")

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step12: データの永続化
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents UserDefaultsを使用したデータの永続化ができる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span タップした回数を保存、参照、削除する。
                                ol.ml20.mb10
                                    li 表示数値、数値Up、End、Save, Clearラベルを配置する。
                                    li 数値Upラベルをタップすると表示数値が+1(インクリメント)される。
                                    li Endラベルをタップすると再度GameSceneを表示する。
                                    li Saveラベルをタップすると表示数値を保存する。
                                    li Clearラベルをタップすると保存されている表示数値を削除する。

                                img(src="images/step12_xcode_01.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li UserDefaultsの使い方
                                    include:markdown ../md/Step12/1.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step13: シーンとビューコントローラー間の遷移
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents シーンとビューコントローラー間の遷移ができる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents
                                .mb10
                                    span シーン -> シーン -> ビューコントロラー -> シーン の順で遷移させる。
                                ol.ml20.mb10
                                    li FirstViewControllerでStartScene,EndSceneと遷移する。
                                    li NotificationCenterを使ってEndSceneからSecondViewControllerに遷移する。
                                    li SecondViewControllerからFirstViewControllerのStartSceneに遷移する。
                                ul.displayTable
                                  li.tableCell.pr10
                                    img(src="images/step13_xcode_01.png", class="capture")
                                  li.tableCell.pr10
                                    img(src="images/step13_xcode_02.png", class="capture")
                                  li.tableCell
                                    img(src="images/step13_xcode_03.png", class="capture")

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li ビューコントロラーへの遷移
                                    include:markdown ../md/Step13/1.md
                                li NotificationCenterの使い方
                                    include:markdown ../md/Step13/2.md

            .play-list
                .play-list-item
                    .step-header
                        .step-num <i class="fa fa-plus-square"></i> Step14: データの共有
                    .play-code
                        dl.learn
                            dt.learn-title 習得事項
                            dd.learn-contents FirebaseのAuthとRealtime Databaseを使うことができる。
                        dl.subject.mb10
                            dt.subject-title 課題
                            dd.subject-contents.mb10
                                .mb10
                                    span 認証とデータベースを使用したプログラムを作成する。
                                ol.ml20.mb10
                                    li.mb10 ユーザー登録画面を作成する。(サインイン機能も同一の画面で実装する。)
                                        .mb5 [構成要素]
                                        ul.ml20
                                            li 画面タイトルを表示するためのLabel
                                            li 通知メッセージを表示するためのLabel
                                            li Emailを入力するためのText Field
                                            li Passwordを入力するためのText Field
                                            li Nameを入力するためのText Field
                                            li 登録するためのButton
                                            li サインインするためのButton
                                    li.mb10 Game画面を作成する。
                                        .mb5 [構成要素]
                                        ul.ml20
                                            li 画面タイトルを表示するためのLabel
                                            li 通知メッセージを表示するためのLabel
                                            li 数値入力のためのText Field
                                            li 数値保存のためのButton
                                            li ランキング画面に遷移するためのButton
                                    li ランキング画面を作成する。
                                        .mb5 [構成要素]
                                        ul.ml20
                                            li 画面タイトルを表示するためのLabel
                                            li 通知メッセージを表示するためのLabel
                                            li ランキングを表示するためのTable View
                                            li サインアウトするためのButton

                                ul.displayTable
                                  li.tableCell.pr10
                                    img(src="images/step14_xcode_01.png", class="capture")
                                  li.tableCell.pr10
                                    img(src="images/step14_xcode_02.png", class="capture")
                                  li.tableCell
                                    img(src="images/step14_xcode_03.png", class="capture")

                            dt.subject-title 補足事項
                            dd.subject-contents.mb20
                                span.emphasis 外部ライブラリ管理ツール
                                .mb10
                                    a(href="https://cocoapods.org/", target="blank") CocoaPods
                                    | の導入
                                ol.ml20
                                    li CocoaPodsをインストールする。
                                        include:markdown ../md/Step14/1.md
                                    li プロジェクトルートでPodfileを作成する。
                                        include:markdown ../md/Step14/2.md
                                    li FirebaseのAuthとRealtime Databaseを使用するためのライブラリをPodfileに記入する。
                                        include:markdown ../md/Step14/3.md
                                    li Podfileに記入したライブラリをインストールする。
                                        include:markdown ../md/Step14/4.md
                                    li 以後Xcodeの起動は.xcworkspaceから行うこと。
                            dd.subject-contents
                                span.emphasis Mobile Backend as a Service（MBaas）
                                .mb10
                                    a(href="https://firebase.google.com/", target="blank") Firebase
                                    | の導入
                                ol.ml20
                                    li Googleアカウントでサインインする。
                                    li 新規プロジェクトの作成する。
                                    li iOSアプリにFirebaseを追加する。
                                    li ダウンロードしたGoogleService-Info.plistをプロジェクトルートに配置する。
                                    li メインのAppDelegateクラスに初期化コードを追加する。
                                        include:markdown ../md/Step14/5.md
                                    li 管理画面 Authentication > ログイン方法でメール/パスワードでのプロバイダにログインを有効にする。

                        button.answerBtn.mb10 ヒント

                        .answer.hidden
                            ul.guidance
                                li Firebaseで保存するデータ構造
                                    include:markdown ../md/Step14/10.md
                                li 登録処理
                                    include:markdown ../md/Step14/6.md
                                li サインイン処理
                                    include:markdown ../md/Step14/7.md
                                li 保存処理
                                    include:markdown ../md/Step14/8.md
                                li サインアウト処理
                                    include:markdown ../md/Step14/9.md

    #react


    script(src='js/react-with-addons-0.13.1.js')
    script(src='js/bundle.js')
    script(src='js/highlight.pack.js')
    script(type="text/javascript").
        hljs.initHighlightingOnLoad();
